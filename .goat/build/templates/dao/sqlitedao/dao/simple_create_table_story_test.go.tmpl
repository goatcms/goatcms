{{define "dao.create_table_story_test" -}}
{{- $ctx := . -}}
{{- $name := (index $ctx.Data (print .From ".entity")) -}}
{{- $entityName := (camelcaseuf $name) -}}
{{- $typeName := (print $entityName "CreateTable") -}}
{{- $fieldsBaseKey := (print .From ".fields.") -}}

package {{lower $name}}dao

import (
	"testing"
	"github.com/jmoiron/sqlx"
	"github.com/goatcms/goatcore/app/scope"
	sqlitebase "{{index $ctx.Properties.Build "path"}}"
	_ "github.com/mattn/go-sqlite3"
)


func TestCreateTable(t *testing.T) {
	t.Parallel()
	doCreateTable(t)
}

func doCreateTable(t *testing.T) (bool, *sqlx.DB) {
	var (
		db  *sqlx.DB
		err error
	)
	if db, err = sqlitebase.NewMemoryDB(); err != nil {
		t.Error(err)
		return false, db
	}
	createTable := {{$entityName}}CreateTable{}
	createTable.deps.DB = db
	s := scope.NewScope("testtag")
	if err := createTable.CreateTable(s); err != nil {
		t.Error(err)
		return false, db
	}
	if _, err = sqlitebase.Commit(s); err != nil {
		t.Error(err)
		return false, db
	}
	return true, db
}

{{- end -}}
