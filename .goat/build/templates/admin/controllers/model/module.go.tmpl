{{define "admin.controllers.model.module" -}}
{{- $ctx := . -}}
{{- $entityName := (camelcaseuf (index $ctx.Data (print .From ".entity"))) -}}

package {{lower $entityName}}

import (
	"github.com/goatcms/goatcore/app"
	"github.com/goatcms/goatcms/cmsapp/services"
	"github.com/goatcms/goatcore/dependency"
)

// InitDependencies initialize the {{$entityName}} controllers
func InitDependencies(a app.App) (err error) {
	var (
		deps struct {
			Router services.Router `dependency:"RouterService"`
		}
		dp dependency.Provider
		list     *List
		inserter *Inserter
		updater  *Updater
		deleter  *Deleter
	)
	dp = a.DependencyProvider()
	if err = dp.InjectTo(&deps); err != nil {
		return err
	}
	// add list controller
	if list, err = NewList(dp); err != nil {
		return err
	}
	deps.Router.OnGet("/admin/{{lower $entityName}}", list.Get)
	// add inserter
	if inserter, err = NewInserter(dp); err != nil {
		return err
	}
	deps.Router.OnGet("/admin/{{lower $entityName}}/insert", inserter.Get)
	deps.Router.OnPost("/admin/{{lower $entityName}}/insert", inserter.Post)
	// add updater
	if updater, err = NewUpdater(dp); err != nil {
		return err
	}
	deps.Router.OnGet("/admin/{{lower $entityName}}/{id:[0-9]+}", updater.Get)
	deps.Router.OnPost("/admin/{{lower $entityName}}/{id:[0-9]+}", updater.Post)
	// add deleter
	if deleter, err = NewDeleter(dp); err != nil {
		return err
	}
	deps.Router.OnPost("/admin/{{lower $entityName}}/{id:[0-9]+}$delete", deleter.DO)
	return nil
}


{{- end -}}
