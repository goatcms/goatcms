{{define "entity" -}}
{{- $ctx := . -}}
{{- $name := (index $ctx.Data (print .From ".entity")) -}}
{{- $fieldsBaseKey := (print .From ".fields.") -}}

package {{index $ctx.Properties.Build "package"}}

// {{camelcaseuf $name}} storages {{lower $name}} data
type {{camelcaseuf $name}} struct {

{{- range $index, $field := (keys .Data $fieldsBaseKey) -}}
  {{- $key := (print $fieldsBaseKey $field) -}}
  {{- $fieldName := (index $ctx.Data (print $key ".name")) -}}
  {{- $fieldType := (index $ctx.Data (print $key ".type")) }}
  {{camelcaseuf $fieldName}} {{template "gotype" $fieldType}} `json:"{{camelcaself $fieldName}}" db:"{{camelcaself $fieldName}}"`
{{- end -}}

{{/* End of type*/}}
}

{{- end -}}
